@mixin focused {
    outline: $border solid var(--cue-interactive);
    outline-offset: -$border;
    position: relative;
}

@mixin clearfix {
    &:after {
        content: "";
        display: block;
        clear: both;
        height: 100%;
    }
}

@mixin button {
    display: block;
    box-sizing: border-box;
    background: var(--cue-interactive);
    color: var(--cue-interactive-inv) !important;
    display: inline-block;
    padding: $grid/2;
    margin: 0;
    border: 0;
    cursor: pointer;
    z-index: 1;
    border-radius: $border-radius;
    font-weight: bold;
    font-family: $font-ui;
    text-decoration: none !important;
    width: auto;

    &:hover {
        filter: saturate(1.5) brightness(1.1);
        z-index: 2;
    }

    &:active {
        filter: saturate(2);
        transform: scale(1);
    }

    &.button--confirmation,
    &.button--safe {
        background: var(--cue-safe);
        color: var(--cue-safe-inv) !important;
    }

    &.button--info &.button--information {
        background: var(--cue-information);
        color: var(--cue-information-inv) !important;
    }

    &.button--warning {
        background: var(--cue-warning);
        color: var(--cue-warning-inv) !important;
    }

    &.button--error,
    &.button--danger {
        background: var(--cue-danger);
        color: var(--cue-danger-inv) !important;
    }

    &.button--neutral {
        background: var(--theme-neutral);
        color: var(--theme-neutral-inv) !important;
    }

    &.button--inverted {
        background: var(--theme-neutral-a10);
        color: var(--cue-interactive) !important;

        &.button--confirmation,
        &.button--safe {
            color: var(--cue-safe) !important;
        }

        &.button--info,
        &.button--information {
            color: var(--cue-information) !important;
        }

        &.button--warning {
            color: var(--cue-warning) !important;
        }

        &.button--error,
        &.button--danger {
            color: var(--cue-danger) !important;
        }

        &.button--neutral {
            color: var(--theme-neutral) !important;
        }
    }
}

@mixin button-confirmation {
    @include button;
    background: var(--cue-safe);
    color: var(--cue-safe-inv);
}

@mixin button-info {
    @include button;
    background: var(--cue-information);
    color: var(--cue-information-inv);
}

@mixin button-warning {
    @include button;
    background: var(--cue-warning);
    color: var(--cue-warning-inv);
}

@mixin button-error {
    @include button;
    background: var(--cue-danger);
    color: var(--cue-danger-inv);
}

@mixin loading-overlay {
    position: relative;

    &:before,
    &:after {
        display: block;
        visibility: hidden;
        position: absolute;
        z-index: -1;
    }

    &:before {
        content: "";
        z-index: 100;
        background: var(--background-a90);
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: block;
    }

    &:after {
        @include material-icon;
        z-index: 101;
        color: var(--cue-interactive);
        font-size: 2 * $grid;
        content: "sync";
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    &.loading {
        min-height: 3 * $grid;

        &:before,
        &:after {
            visibility: visible;
        }

        &:after {
            font-size: 3em;
            animation-name: spin-loading-overlay;
            animation-duration: 2000ms;
            animation-iteration-count: infinite;
            animation-timing-function: linear;
            z-index: 1000;
        }
    }

    &.error {
        &:after {
            font-size: 3em;
            color: var(--cue-danger);
            content: "error";
            animation: none;
        }
    }
}

@mixin uncolored-links {
    a {
        color: inherit;
    }

    a:link,
    a:active,
    a:link:hover,
    a:focus,
    a:visited {
        color: inherit;
        text-decoration: underline;
    }
}