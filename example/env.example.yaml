# The suggested way of configuring Digraph is with two main config files.
# A main config.yaml file that holds all the settings for your site, and an
# additional untracked file named env.yaml to hold environment-specific settings
# such as URL and database connection settings

# url settings -- this example assumes you're developing on localhost in a
# directory calle digraph-core that contains the git repo
url:
  # // is usually fine, but some BBCode tags won't work right without either
  # the full http:// or https://
  protocol: http://
  # fully qualified domain name of server
  domain: localhost
  # path to Digraph installation should have leading/trailing slashes
  path: /digraph-core/example/

# If paths.cache isn't specified digraph will try to get a folder in the system
# temp directory. This is ideal, because nothing in the cache path should be
# persistent, and clearing it on system reboots is actually best.
# It can be useful to have the cache directory in the storage directory for
# development, because that makes it easy to delete to clear the cache.
# If possible, it's also advisable to put your cache directory somewhere it will
# get overwritten by deployment.

# paths:
#   cache: ${paths.storage}/cache

# It can also be useful to set extremely loose caching rules for development
# The following require 1 second generation times to trigger caching, and only
# cache results for one second. The effect is basically no caching.

# cache:
#   # factorycache caches the results of storage queries
#   factorycache:
#     threshold: 1000 #ms duration a query must take to be cached
#   # mungercache caches the results of munging layers
#   mungercache:
#     threshold: 1000 #ms duration a munger must take to be cached

# Bootstrap settings are removed from the final config object after the
# bootstrapper runs. So any settings you put here aren't available to any part
# of the system after the initial bootstrapping is complete.
# It's advisable to only configure connection settings in an environment file,
# that way they're not in source control, and you won't wind up with an
# environment accidentally connecting to the wrong database server.
bootstrap:
  # credentials can be referenced by name in bootstrap.drivers when you
  # configure a driver
  credentials:
    default:
      # note that if you're using mysql, you need to specify your character set,
      # because the DBAL uses PHP's built in json decoding, and it will choke
      # on malformed characters if you don't specify your character set here.
      dsn: mysql:host=db.host;dbname=yourdbname;charset=utf8
      username: db-username
      password: db-password
  drivers:
    default:
      class: default
      credentials: default
